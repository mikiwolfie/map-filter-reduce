{"ast":null,"code":"var numbers = [3, 56, 2, 48, 5]; //Map -Create a new array by doing something with each item in an array.\n// function double(x) {\n//   return x * 2;\n// }\n// const newNumbers = numbers.map(double);\n// var newNumbers = [];\n// numbers.forEach(function (x) {\n//   newNumbers.push(x * 2);\n// });\n// const newNumbers = numbers.map(function (x) {\n//   return x * 2;\n// });\n//\n// console.log(newNumbers);\n//Filter - Create a new array by keeping the items that return true.\n// cosnt newNumbers = numbers.filter(function (num) {\n//   return num < 10\n// });\n// var newNumbers = [];\n// numbers.forEach(function(num) {\n//   if (num < 10) {\n//     newNumbers.push(num);\n//   }\n// })\n// console.log(newNumbers);\n//Reduce - Accumulate a value by doing something to each item in an array.\n// var newNumber = 0;\n// numbers.forEach(function (currentNumber) {\n//   newNumber += currentNumber\n// });\n//\n\nconsole.log(newNumber); // numbers.reduce(function (accumulator, currentNumber) {\n//  console.log(\"accumulator = \" + accumulator);\n//  console.log(\"currentNumber = \" + currentNumber);\n//   return accumulator + currentNumber;\n// })\n//Find - find the first item that matches from an array.\n//FindIndex - find the index of the first item that matches.","map":{"version":3,"sources":["C:/Users/House Banawa/Desktop/website/map-filter-reduce/src/index.js"],"names":["numbers","console","log","newNumber"],"mappings":"AAAA,IAAIA,OAAO,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,EAAX,EAAe,CAAf,CAAd,C,CAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AACAC,OAAO,CAACC,GAAR,CAAYC,SAAZ,E,CAEA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["var numbers = [3, 56, 2, 48, 5];\n\n//Map -Create a new array by doing something with each item in an array.\n\n// function double(x) {\n//   return x * 2;\n// }\n// const newNumbers = numbers.map(double);\n\n// var newNumbers = [];\n// numbers.forEach(function (x) {\n//   newNumbers.push(x * 2);\n// });\n\n\n// const newNumbers = numbers.map(function (x) {\n//   return x * 2;\n// });\n//\n// console.log(newNumbers);\n\n//Filter - Create a new array by keeping the items that return true.\n\n// cosnt newNumbers = numbers.filter(function (num) {\n//   return num < 10\n// });\n\n// var newNumbers = [];\n// numbers.forEach(function(num) {\n//   if (num < 10) {\n//     newNumbers.push(num);\n//   }\n// })\n\n// console.log(newNumbers);\n\n//Reduce - Accumulate a value by doing something to each item in an array.\n\n// var newNumber = 0;\n// numbers.forEach(function (currentNumber) {\n//   newNumber += currentNumber\n// });\n//\nconsole.log(newNumber)\n\n// numbers.reduce(function (accumulator, currentNumber) {\n//  console.log(\"accumulator = \" + accumulator);\n//  console.log(\"currentNumber = \" + currentNumber);\n//   return accumulator + currentNumber;\n// })\n\n//Find - find the first item that matches from an array.\n\n//FindIndex - find the index of the first item that matches.\n"]},"metadata":{},"sourceType":"module"}